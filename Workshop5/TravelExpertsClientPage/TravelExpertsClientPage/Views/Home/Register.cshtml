@model TravelExpertsClientPage.Models.Customer

@{
    if (Session["UserName"] != null)
    {
        ViewBag.Title = "Edit Account";
    }
    else
    {
        ViewBag.Title = "Register a New Account";
    }
}
<!-- change password & task 2 specific functions author TH (inner HTML in script copied from autogenerated HTML)-->
<script>
        function passChange() {
            var area = document.getElementById("passwordArea");
            area.innerHTML = '<div class="form-group"><div class="row"><label class="control-label col-md-2" for="Password">Password (Min 8 characters)</label> \
            <input class="form-control text-box single-line password" data-val="true" data-val-length="The field Password (Min 8 characters) must be a string with a maximum length of 128." data-val-length-max="128" data-val-minlength="The field Password (Min 8 characters) must be a string or array type with a minimum length of &#39;8&#39;." data-val-minlength-min="8" data-val-required="Password is required" id="Password" name="Password" type="password" /> \
            <span class="field-validation-valid text-danger" data-valmsg-for="Password" data-valmsg-replace="true"></span> \
            <label class="control-label col-md-2" for="ComparePassword">Confirm Password</label> \
            <input class="form-control text-box single-line password" data-val="true" data-val-equalto="Passwords do not match" data-val-equalto-other="*.Password" data-val-length="The field Confirm Password must be a string with a maximum length of 128." data-val-length-max="128" data-val-minlength="The field Confirm Password must be a string or array type with a minimum length of &#39;8&#39;." data-val-minlength-min="8" data-val-required="Please confirm the password" id="ComparePassword" name="ComparePassword" type="password" /> \
            <span class="field-validation-valid text-danger" data-valmsg-for="ComparePassword" data-valmsg-replace="true"></span> \
        </div></div>'
        }
</script>
<h2>@ViewBag.Title</h2>
<h3>@TempData["Status"]</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Customer</h4>
            <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.CustFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustFirstName, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.CustAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.CustCity, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.CustProv, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustProv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustProv, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustPostal, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustPostal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustPostal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.CustCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustCountry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustCountry, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustHomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustHomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustHomePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.CustBusPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustBusPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustBusPhone, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CustEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Session["UserName"] == null)
        {
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    @Html.LabelFor(model => model.ComparePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ComparePassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ComparePassword, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div id="passwordArea">
                <span class="btn btn-primary" onclick="passChange()">Change Password</span>
            </div>
            <br />
        }
        @*<div class="form-group">
                @Html.LabelFor(model => model.AgentId, "AgentId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AgentId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AgentId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary float-left" />&nbsp;
                @Html.ActionLink("Clear", "Register", "Home", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
